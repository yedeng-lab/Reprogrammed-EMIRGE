#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Time     : 2020/11/17 16:58
# @Author   : Danrui Wang
# @File     : abundance_calculate.py
# @Software : PyCharm

import sys
import os
import pandas as pd
import numpy as np

def abun_calcu(in_seq, in_bam, in_sample, out_abun):
    references = []
    #input the fasta file generated by HEMIRGE
    with open(in_seq, "r") as f1:
        data = f1.readlines()
        for line in data:
            if line.startswith(">"):
                line = line.replace(">", "",1).replace("\n","")
                references.append(line)
    #Input the txt file of sample names
    samples = []
    with open(in_sample, "r") as f2:
        data = f2.readlines()
        for line in data:
            line = line.replace("\n", "")
            samples.append(line)
    # print(samples)
    # print(references)
    abun = pd.DataFrame(index=references, columns=samples)
    abun.loc[:, :] = 0
    #Input the bam file generated by HEMIRGE
    with open(in_bam, "r") as f3:
        data = f3.readlines()
        for line in data:
            seq = line.split("\t")[0]
            ref = line.split("\t")[2]
            # print(name_h)
            for i in samples:
                if i in seq:
                    abun.at[ref, i] += 1
    # Output the abundance in txt formate
    a = os.getcwd()
    abun.to_csv(out_abun, sep="\t", index=True)

def shorten_fasta(in_fasta, out_fasta):
    with open(in_fasta, mode="r", encoding="utf-8") as f1:
        with open(out_fasta, mode="w", encoding="utf-8") as w1:
            data = f1.readlines()
            length = len(data)
            w1.write(data[0])
            for n in range(1,length-1):
                if data[n].startswith(">"):
                    w1.write("\n"+data[n])
                else:
                    line = data[n].replace("\n",'')
                    w1.write(line)
            w1.write(data[length-1])

def main(argv=sys.argv[1:]):
    f_seq = sys.argv[1]
    f_bam = sys.argv[2]
    f_sample = sys.argv[3]
    f_abun = sys.argv[4]
    f_fasta = sys.argv[5]

    abun_calcu(f_seq, f_bam, f_sample, f_abun)
    shorten_fasta(f_seq, f_fasta)

main()
